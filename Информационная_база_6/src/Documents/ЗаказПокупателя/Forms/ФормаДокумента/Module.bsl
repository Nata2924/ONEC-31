
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// {{ НС Доработка типовой формы
	НовыйЭлементКонтактноеЛицо = Элементы.Добавить("Д_КонтактноеЛицо", Тип("ПолеФормы"), Элементы.ГруппаШапкаПраво);
	НовыйЭлементКонтактноеЛицо.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлементКонтактноеЛицо.ПутьКДанным = "Объект.Д_КонтактноеЛицо";
	
	НовыйЭлементГруппаСкидка = Элементы.Добавить("ГруппаСкидка", Тип("ГруппаФормы"), Элементы.ГруппаШапкаЛево);
	НовыйЭлементГруппаСкидка.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НовыйЭлементГруппаСкидка.Отображение = ОтображениеОбычнойГруппы.Нет;
	
	НовыйЭлементСогласованнаяСкидка = Элементы.Добавить("Д_СогласованнаяСкидка", Тип("ПолеФормы"), Элементы.ГруппаСкидка);
	НовыйЭлементСогласованнаяСкидка.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлементСогласованнаяСкидка.ПутьКДанным = "Объект.Д_СогласованнаяСкидка";
	НовыйЭлементСогласованнаяСкидка.УстановитьДействие("ПриИзменении", "Д_СогласованнаяСкидкаПриИзменении");
	
	НоваяКомандаПересчетДокумента = ЭтотОбъект.Команды.Добавить("Д_ПересчетДокумента");
	НоваяКомандаПересчетДокумента.Действие = "Д_ПересчетДокумента";
	НоваяКомандаПересчетДокумента.Заголовок = "Пересчет документа";

	НовыйЭлементПересчетДокумента = ЭтотОбъект.Элементы.Добавить("Д_ПересчетДокумента", Тип("КнопкаФормы"), Элементы.ГруппаСкидка);
	НовыйЭлементПересчетДокумента.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
 	НовыйЭлементПересчетДокумента.ИмяКоманды = "Д_ПересчетДокумента";
	НовыйЭлементПересчетДокумента.Отображение = ОтображениеКнопки.КартинкаИТекст;
	НовыйЭлементПересчетДокумента.Картинка = БиблиотекаКартинок.Перечитать;
	// }}
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// {{ Н.С. - Закоментировала штатный код	
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	// }}

	// {{ Н.С. - Добавила расчет суммы документа с учетом скидки
	СуммаБезСкидки = (ТекущиеДанные.Цена * ТекущиеДанные.Количество);
	ТекущиеДанные.Скидка = ?(ТекущиеДанные.Скидка > 100, 0, ТекущиеДанные.Скидка);
	Если ТекущиеДанные.Скидка + Объект.Д_СогласованнаяСкидка > 100 Тогда
		ТекущиеДанные.Сумма = 0;
		ПредупреждениеАсинх(СтрШаблон("Суммарная скидка в строке № %1 превышает 100%%", ТекущиеДанные.НомерСтроки));
	Иначе
		СкидкаОбщ = ТекущиеДанные.Скидка + Объект.Д_СогласованнаяСкидка;
		ТекущиеДанные.Сумма = СуммаБезСкидки - (СуммаБезСкидки / 100 * СкидкаОбщ);
	КонецЕсли;
	// }}
	
	РассчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти

&НаКлиенте
Процедура Д_ПересчетДокумента(Команда)
	// {{ НС
	Д_ВызовРассчитатьСуммуСтроки();
	// }}
КонецПроцедуры

&НаКлиенте
Процедура Д_ВызовРассчитатьСуммуСтроки()
	
	// {{ НС Добавила расчет суммы документа с учетом скидки
	Для Каждого СтрокаТовар Из Объект.Товары Цикл
		РассчитатьСуммуСтроки(СтрокаТовар);
	КонецЦикла;
	Для Каждого СтрокаУслуга Из Объект.Услуги Цикл
		РассчитатьСуммуСтроки(СтрокаУслуга);
	КонецЦикла;
	// }}
	
КонецПроцедуры

&НаКлиенте
Процедура Д_СогласованнаяСкидкаПриИзменении()
	
	// {{ НС Обработка при изменении поля Д_СогласованнаяСкидка
	Оповещение = Новый ОписаниеОповещения("Д_ПослеЗакрытияВопроса", ЭтотОбъект);
	ЗаголовокВопроса = "Вопрос";
	ТекстВопроса = "Пересчитать сумму документа?";
	СписокКнопок = Новый СписокЗначений;
	СписокКнопок.Добавить(КодВозвратаДиалога.Да, "Да");
	СписокКнопок.Добавить(КодВозвратаДиалога.Нет, "Нет");
	ПоказатьВопрос(Оповещение, ТекстВопроса, СписокКнопок,,,ЗаголовокВопроса);
	// }}
	
КонецПроцедуры

&НаКлиенте
Процедура Д_ПослеЗакрытияВопроса(Результат, ПараметрыОповещения) Экспорт

	// {{ НС
	Если Результат = КодВозвратаДиалога.Нет Или Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат = КодВозвратаДиалога.Да Тогда
		Д_ВызовРассчитатьСуммуСтроки();
	КонецЕсли;
    // }}
	
КонецПроцедуры

